# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow file requires a free account on Semgrep.dev to
# manage rules, file ignores, notifications, and more.
#
# See https://semgrep.dev/docs

name: Semgrep

on:
  push:
    branches: [ dev ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ dev ]
  schedule:
    - cron: '43 1 * * 5'

permissions:
  contents: read

# jobs:
#   semgrep:
#     permissions:
#       contents: read # for actions/checkout to fetch code
#       security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
#     name: Scan
#     runs-on: ubuntu-latest
#     steps:
#       # Checkout project source
#       - uses: actions/checkout@v2

#       # Scan code using project's configuration on https://semgrep.dev/manage
#       - uses: returntocorp/semgrep-action@fcd5ab7459e8d91cb1777481980d1b18b4fc6735
#         with:
#           publishToken: ${{ secrets.SEMGREP_APP_TOKEN }}
#           publishDeployment: ${{ secrets.SEMGREP_DEPLOYMENT_ID }}
#           generateSarif: "1"

#       # Upload SARIF file generated in previous step
#       - name: Upload SARIF file
#         uses: github/codeql-action/upload-sarif@v1
#         with:
#           sarif_file: semgrep.sarif
#         if: always()

jobs:
  semgrep:
    name: Scan
    runs-on: ubuntu-latest
    # Skip any PR created by dependabot to avoid permission issues
    if: (github.actor != 'dependabot[bot]')
    steps:
      # Fetch project source
      - uses: actions/checkout@v2

      - uses: returntocorp/semgrep-action@v1
        with:
          config: >- # more at semgrep.dev/explore
            p/security-audit
            p/secrets

        # == Optional settings in the `with:` block

        # Instead of `config:`, use rules set in Semgrep App.
        # Get your token from semgrep.dev/manage/settings.
        #   publishToken: ${{ secrets.SEMGREP_APP_TOKEN }}

        # Never fail the build due to findings on pushes.
        # Instead, just collect findings for semgrep.dev/manage/findings
        #   auditOn: push

        # Upload findings to GitHub Advanced Security Dashboard [step 1/2]
        # See also the next step.
        #   generateSarif: "1"

        # Change job timeout (default is 1800 seconds; set to 0 to disable)
        # env:
        #   SEMGREP_TIMEOUT: 300

      Upload findings to GitHub Advanced Security Dashboard [step 2/2]
      - name: Upload SARIF file for GitHub Advanced Security Dashboard
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: semgrep.sarif
        if: always()
